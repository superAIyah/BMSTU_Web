{"ast":null,"code":"var _jsxFileName = \"/home/fedor/Desktop/Univercie/5 \\u0441\\u0435\\u043C/\\u0440\\u0438\\u043F/frontend/my-app/src/components/multiRangeSlider/MultiRangeSlider.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./multiRangeSlider.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MultiRangeSlider = _ref => {\n  _s();\n  let {\n    min,\n    max,\n    onChange\n  } = _ref;\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(min);\n  const maxValRef = useRef(max);\n  const range = useRef(null);\n\n  // Convert to percentage\n  const getPercent = useCallback(value => Math.round((value - min) / (max - min) * 100), [min, max]);\n\n  // Set width of the range to decrease from the left side\n  useEffect(() => {\n    const minPercent = getPercent(minVal);\n    const maxPercent = getPercent(maxValRef.current);\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [minVal, getPercent]);\n\n  // Set width of the range to decrease from the right side\n  useEffect(() => {\n    const minPercent = getPercent(minValRef.current);\n    const maxPercent = getPercent(maxVal);\n    if (range.current) {\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [maxVal, getPercent]);\n\n  // Get min and max values when their state changes\n  useEffect(() => {\n    onChange({\n      min: minVal,\n      max: maxVal\n    });\n  }, [minVal, maxVal, onChange]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: minVal,\n      onChange: event => {\n        const value = Math.min(Number(event.target.value), maxVal - 1);\n        setMinVal(value);\n        minValRef.current = value;\n      },\n      className: \"thumb thumb--left\",\n      style: {\n        zIndex: minVal > max - 100 && \"5\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      value: maxVal,\n      onChange: event => {\n        const value = Math.max(Number(event.target.value), minVal + 1);\n        setMaxVal(value);\n        maxValRef.current = value;\n      },\n      className: \"thumb thumb--right\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slider\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__right-value\",\n        children: maxVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__track\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: range,\n        className: \"slider__range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__left-value\",\n        children: minVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slider__right-value\",\n        children: maxVal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(MultiRangeSlider, \"joEa1v1zaOhKGQUDNY+uJuhJ5cU=\");\n_c = MultiRangeSlider;\nMultiRangeSlider.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport default MultiRangeSlider;\nvar _c;\n$RefreshReg$(_c, \"MultiRangeSlider\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","useRef","PropTypes","MultiRangeSlider","min","max","onChange","minVal","setMinVal","maxVal","setMaxVal","minValRef","maxValRef","range","getPercent","value","Math","round","minPercent","maxPercent","current","style","left","width","event","Number","target","zIndex","propTypes","number","isRequired","func"],"sources":["/home/fedor/Desktop/Univercie/5 сем/рип/frontend/my-app/src/components/multiRangeSlider/MultiRangeSlider.js"],"sourcesContent":["import React, { useCallback, useEffect, useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./multiRangeSlider.css\";\n\nconst MultiRangeSlider = ({ min, max, onChange }) => {\n  const [minVal, setMinVal] = useState(min);\n  const [maxVal, setMaxVal] = useState(max);\n  const minValRef = useRef(min);\n  const maxValRef = useRef(max);\n  const range = useRef(null);\n\n  // Convert to percentage\n  const getPercent = useCallback(\n    (value) => Math.round(((value - min) / (max - min)) * 100),\n    [min, max]\n  );\n\n  // Set width of the range to decrease from the left side\n  useEffect(() => {\n    const minPercent = getPercent(minVal);\n    const maxPercent = getPercent(maxValRef.current);\n\n    if (range.current) {\n      range.current.style.left = `${minPercent}%`;\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [minVal, getPercent]);\n\n  // Set width of the range to decrease from the right side\n  useEffect(() => {\n    const minPercent = getPercent(minValRef.current);\n    const maxPercent = getPercent(maxVal);\n\n    if (range.current) {\n      range.current.style.width = `${maxPercent - minPercent}%`;\n    }\n  }, [maxVal, getPercent]);\n\n  // Get min and max values when their state changes\n  useEffect(() => {\n    onChange({ min: minVal, max: maxVal });\n  }, [minVal, maxVal, onChange]);\n\n  return (\n    <div className=\"container\">\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={minVal}\n        onChange={(event) => {\n          const value = Math.min(Number(event.target.value), maxVal - 1);\n          setMinVal(value);\n          minValRef.current = value;\n        }}\n        className=\"thumb thumb--left\"\n        style={{ zIndex: minVal > max - 100 && \"5\" }}\n      />\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={maxVal}\n        onChange={(event) => {\n          const value = Math.max(Number(event.target.value), minVal + 1);\n          setMaxVal(value);\n          maxValRef.current = value;\n        }}\n        className=\"thumb thumb--right\"\n      />\n\n      <div className=\"slider\">\n        <div className=\"slider__right-value\">{maxVal}</div>\n        <div className=\"slider__track\" />\n        <div ref={range} className=\"slider__range\" />\n        <div className=\"slider__left-value\">{minVal}</div>\n        <div className=\"slider__right-value\">{maxVal}</div>\n      </div>\n    </div>\n  );\n};\n\nMultiRangeSlider.propTypes = {\n  min: PropTypes.number.isRequired,\n  max: PropTypes.number.isRequired,\n  onChange: PropTypes.func.isRequired\n};\n\nexport default MultiRangeSlider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}